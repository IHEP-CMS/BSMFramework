#! /bin/bash

rootFilesPath=$1
datasetName=$2
numberOfFile=$3
sampleType=$4

echo '{'
echo "  //INPUTS:"
echo "  //rootFilesPath=$1"
echo "  //datasetName=$2"
echo "  //numberOfFile=$3"
echo "  const char * Input = \"root://cmsxrootd.fnal.gov//$rootFilesPath/OutTree_$numberOfFile.root\";"
echo "  const char * Output = \""$datasetName"_$numberOfFile.root\";"
echo ''
echo '  //Get old file, old tree and set top branch address'
echo '  TFile *oldfile = TFile::Open(Input);'
echo '  TTree *oldtree = (TTree*)oldfile->Get("TNT/BOOM");'
echo '  oldtree->SetBranchStatus("*",0);'
echo '  oldtree->SetBranchStatus("Jet_pt",1);'
echo '  oldtree->SetBranchStatus("Jet_Uncorr_pt",1);'
echo '  oldtree->SetBranchStatus("Jet_eta",1);'
echo '  oldtree->SetBranchStatus("Jet_phi",1);'
echo '  oldtree->SetBranchStatus("Jet_mass",1);'
echo '  oldtree->SetBranchStatus("Jet_JesSF",1);'
echo '  oldtree->SetBranchStatus("Jet_JerSF",1);'
echo '  oldtree->SetBranchStatus("Jet_pfCombinedInclusiveSecondaryVertexV2BJetTags",1);'
echo '  oldtree->SetBranchStatus("Jet_neutralHadEnergyFraction",1);'
echo '  oldtree->SetBranchStatus("Jet_chargedEmEnergyFraction",1);'
echo '  oldtree->SetBranchStatus("Jet_neutralEmEnergyFraction",1);'
echo '  oldtree->SetBranchStatus("Jet_numberOfConstituents",1);'
echo '  oldtree->SetBranchStatus("Jet_chargedHadronEnergyFraction",1);'
echo '  oldtree->SetBranchStatus("Jet_chargedMultiplicity",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_pt",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_eta",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_phi",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_mass",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_neutralHadEnergyFraction",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_chargedEmEnergyFraction",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_neutralEmEmEnergyFraction",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_numberOfConstituents",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_chargedHadronEnergyFraction",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_chargedMultiplicity",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_tau1",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_tau2",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_pruned_mass",1);'
echo '  oldtree->SetBranchStatus("BoostedJet_JesSF",1);'
echo '  oldtree->SetBranchStatus("TopTagging_topMass",1);'
echo '  oldtree->SetBranchStatus("TopTagging_minMass",1);'
echo '  oldtree->SetBranchStatus("TopTagging_nSubJets",1);'
echo '  oldtree->SetBranchStatus("patElectron_pt",1);'
echo '  oldtree->SetBranchStatus("patElectron_eta",1);'
echo '  oldtree->SetBranchStatus("patElectron_phi",1);'
echo '  oldtree->SetBranchStatus("patElectron_energy",1);'
echo '  oldtree->SetBranchStatus("patElectron_SCeta",1);'
echo '  oldtree->SetBranchStatus("patElectron_charge",1);'
echo '  oldtree->SetBranchStatus("patElectron_isPassVeto",1);'
echo '  oldtree->SetBranchStatus("patElectron_isPassLoose",1);'
echo '  oldtree->SetBranchStatus("patElectron_isPassMedium",1);'
echo '  oldtree->SetBranchStatus("patElectron_isPassTight",1);'
echo '  oldtree->SetBranchStatus("patElectron_isPassHEEPId",1);'
echo '  oldtree->SetBranchStatus("patElectron_passConversionVeto",1);'
echo '  oldtree->SetBranchStatus("patElectron_inCrack",1);'
echo '  oldtree->SetBranchStatus("patElectron_isPassMvatrig",1);'
echo '  oldtree->SetBranchStatus("patElectron_full5x5_sigmaIetaIeta",1);'
echo '  oldtree->SetBranchStatus("patElectron_hOverE",1);'
echo '  oldtree->SetBranchStatus("patElectron_ecalPFClusterIso",1);'
echo '  oldtree->SetBranchStatus("patElectron_hcalPFClusterIso",1);'
echo '  oldtree->SetBranchStatus("patElectron_isolPtTracks",1);'
echo '  oldtree->SetBranchStatus("patElectron_dEtaIn",1);'
echo '  oldtree->SetBranchStatus("patElectron_dPhiIn",1);'
echo '  oldtree->SetBranchStatus("Muon_pt",1);'
echo '  oldtree->SetBranchStatus("Muon_eta",1);'
echo '  oldtree->SetBranchStatus("Muon_phi",1);'
echo '  oldtree->SetBranchStatus("Muon_energy",1);'
echo '  oldtree->SetBranchStatus("Muon_charge",1);'
echo '  oldtree->SetBranchStatus("Muon_tight",1);'
echo '  oldtree->SetBranchStatus("Muon_relIsoDeltaBetaR04",1);'
echo '  oldtree->SetBranchStatus("triggerSL",1);'
echo '  oldtree->SetBranchStatus("triggerDL",1);'
echo '  oldtree->SetBranchStatus("HLT_Ele105_CaloIdVT_GsfTrkIdT",1);'
echo '  oldtree->SetBranchStatus("HLT_Ele27_eta2p1_WP75_Gsf",1);'
echo '  oldtree->SetBranchStatus("HLT_Ele27_eta2p1_WPLoose_Gsf",1);'
echo '  oldtree->SetBranchStatus("HLT_Mu50",1);'
echo '  oldtree->SetBranchStatus("HLT_IsoMu20",1);'
echo '  oldtree->SetBranchStatus("nBestVtx",1);'
echo '  oldtree->SetBranchStatus("PUWeight",1);'
echo '  oldtree->SetBranchStatus("ttHFCategory",1);'
if [ "$sampleType" == "MC" ]; then
    echo '  oldtree->SetBranchStatus("Gen_pt",1);'
    echo '  oldtree->SetBranchStatus("Gen_eta",1);'
    echo '  oldtree->SetBranchStatus("Gen_phi",1);'
    echo '  oldtree->SetBranchStatus("Gen_status",1);'
    echo '  oldtree->SetBranchStatus("Gen_pdg_id",1);'
    echo '  oldtree->SetBranchStatus("Gen_motherpdg_id",1);'
fi
echo ''
echo '  //Create a new file + a clone of old tree in new file'
echo '  TFile *newfile = new TFile(Output,"recreate");'
echo '  TTree *newtree = oldtree->CloneTree(0);'
echo ''
echo '  //MUONS LOAD'
echo '  vector<double> *Muon_pt,*Muon_eta,*Muon_phi,*Muon_energy,*Muon_relIsoDeltaBetaR04;'
echo '  vector<int> *Muon_tight,*Muon_charge;'
echo '  TBranch *b_Muon_pt,*b_Muon_eta,*b_Muon_phi,*b_Muon_energy,*b_Muon_relIsoDeltaBetaR04,*b_Muon_tight,*b_Muon_charge;'
echo '  oldtree->SetBranchAddress("Muon_pt", &Muon_pt, &b_Muon_pt);'
echo '  oldtree->SetBranchAddress("Muon_eta",&Muon_eta,&b_Muon_eta);'
echo '  oldtree->SetBranchAddress("Muon_phi",&Muon_phi,&b_Muon_phi);'
echo '  oldtree->SetBranchAddress("Muon_energy",&Muon_energy,&b_Muon_energy);'
echo '  oldtree->SetBranchAddress("Muon_relIsoDeltaBetaR04",&Muon_relIsoDeltaBetaR04,&b_Muon_relIsoDeltaBetaR04);'
echo '  oldtree->SetBranchAddress("Muon_tight",&Muon_tight,&b_Muon_tight);'
echo '  oldtree->SetBranchAddress("Muon_charge",&Muon_charge,&b_Muon_charge);'
echo ''
echo '  //ELECTRON LOAD'
echo '  vector<double> *patElectron_passConversionVeto,*patElectron_inCrack,*patElectron_pt,*patElectron_eta,*patElectron_SCeta,*patElectron_phi,*patElectron_energy;'
echo '  vector<double> *patElectron_relIsoDeltaBeta,*patElectron_full5x5_sigmaIetaIeta,*patElectron_hOverE,*patElectron_ecalPFClusterIso,*patElectron_hcalPFClusterIso;'
echo '  vector<double> *patElectron_isolPtTracks,*patElectron_dEtaIn,*patElectron_dPhiIn;'
echo '  vector<int> *patElectron_isPassMedium,*patElectron_isPassLoose,*patElectron_charge,*patElectron_isPassVeto,*patElectron_isPassTight,*patElectron_isPassHEEPId,*patElectron_isPassMvatrig;'
echo '  TBranch *b_patElectron_pt,*b_patElectron_eta,*b_patElectron_SCeta,*b_patElectron_phi,*b_patElectron_energy,*b_patElectron_relIsoDeltaBeta,*b_patElectron_isPassMvatrig;'
echo '  TBranch *b_patElectron_inCrack,*b_patElectron_isPassMedium,*b_patElectron_isPassLoose,*b_patElectron_passConversionVeto,*b_patElectron_charge,*b_patElectron_isPassVeto;'
echo '  TBranch *b_patElectron_isPassTight,*b_patElectron_isPassHEEPId,*b_patElectron_full5x5_sigmaIetaIeta,*b_patElectron_hOverE,*b_patElectron_ecalPFClusterIso;'
echo '  TBranch *b_patElectron_hcalPFClusterIso,*b_patElectron_isolPtTracks,*b_patElectron_dEtaIn,*b_patElectron_dPhiIn;'
echo '  oldtree->SetBranchAddress("patElectron_pt", &patElectron_pt, &b_patElectron_pt);'
echo '  oldtree->SetBranchAddress("patElectron_eta", &patElectron_eta, &b_patElectron_eta);'
echo '  oldtree->SetBranchAddress("patElectron_SCeta", &patElectron_SCeta, &b_patElectron_SCeta);'
echo '  oldtree->SetBranchAddress("patElectron_phi", &patElectron_phi, &b_patElectron_phi);'
echo '  oldtree->SetBranchAddress("patElectron_energy", &patElectron_energy, &b_patElectron_energy);'
echo '  oldtree->SetBranchAddress("patElectron_relIsoDeltaBeta", &patElectron_relIsoDeltaBeta, &b_patElectron_relIsoDeltaBeta);'
echo '  oldtree->SetBranchAddress("patElectron_inCrack", &patElectron_inCrack, &b_patElectron_inCrack);'
echo '  oldtree->SetBranchAddress("patElectron_isPassMedium", &patElectron_isPassMedium, &b_patElectron_isPassMedium);'
echo '  oldtree->SetBranchAddress("patElectron_isPassLoose", &patElectron_isPassLoose, &b_patElectron_isPassLoose);'
echo '  oldtree->SetBranchAddress("patElectron_passConversionVeto", &patElectron_passConversionVeto, &b_patElectron_passConversionVeto);'
echo '  oldtree->SetBranchAddress("patElectron_charge",&patElectron_charge,&b_patElectron_charge);'
echo '  oldtree->SetBranchAddress("patElectron_isPassVeto",&patElectron_isPassVeto,&b_patElectron_isPassVeto);'
echo '  oldtree->SetBranchAddress("patElectron_isPassTight",&patElectron_isPassTight,&b_patElectron_isPassTight);'
echo '  oldtree->SetBranchAddress("patElectron_isPassHEEPId",&patElectron_isPassHEEPId,&b_patElectron_isPassHEEPId);'
echo '  oldtree->SetBranchAddress("patElectron_isPassMvatrig",&patElectron_isPassMvatrig,&b_patElectron_isPassMvatrig);'
echo '  oldtree->SetBranchAddress("patElectron_full5x5_sigmaIetaIeta",&patElectron_full5x5_sigmaIetaIeta,&b_patElectron_full5x5_sigmaIetaIeta);'
echo '  oldtree->SetBranchAddress("patElectron_hOverE",&patElectron_hOverE,&b_patElectron_hOverE);'
echo '  oldtree->SetBranchAddress("patElectron_ecalPFClusterIso",&patElectron_ecalPFClusterIso,&b_patElectron_ecalPFClusterIso);'
echo '  oldtree->SetBranchAddress("patElectron_hcalPFClusterIso",&patElectron_hcalPFClusterIso,&b_patElectron_hcalPFClusterIso);'
echo '  oldtree->SetBranchAddress("patElectron_isolPtTracks",&patElectron_isolPtTracks,&b_patElectron_isolPtTracks);'
echo '  oldtree->SetBranchAddress("patElectron_dEtaIn",&patElectron_dEtaIn,&b_patElectron_dEtaIn);'
echo '  oldtree->SetBranchAddress("patElectron_dPhiIn",&patElectron_dPhiIn,&b_patElectron_dPhiIn);'
echo ''
echo '  //JET LOAD'
echo '  vector<double> *Jet_pt,*Jet_Uncorr_pt,*Jet_eta,*Jet_phi,*Jet_pfCombinedInclusiveSecondaryVertexV2BJetTags,*Jet_neutralHadEnergyFraction;'
echo '  vector<double> *Jet_chargedEmEnergyFraction,*Jet_neutralEmEnergyFraction;'
echo '  vector<double> *Jet_chargedHadronEnergyFraction,*Jet_numberOfConstituents,*Jet_chargedMultiplicity,*Jet_mass,*Jet_JesSF,*Jet_JerSF;'
echo '  TBranch *b_Jet_pt,*b_Jet_Uncorr_pt,*b_Jet_eta,*b_Jet_phi,*b_Jet_neutralHadEnergyFraction,*b_Jet_chargedEmEnergyFraction,*b_Jet_neutralEmEnergyFraction,*b_Jet_mass,*b_Jet_JesSF;'
echo '  TBranch *b_Jet_pfCombinedInclusiveSecondaryVertexV2BJetTags,*b_Jet_numberOfConstituents,*b_Jet_chargedHadronEnergyFraction,*b_Jet_chargedMultiplicity,*b_Jet_JerSF;'
echo '  oldtree->SetBranchAddress("Jet_pt", &Jet_pt, &b_Jet_pt);'
echo '  oldtree->SetBranchAddress("Jet_Uncorr_pt", &Jet_Uncorr_pt, &b_Jet_Uncorr_pt);'
echo '  oldtree->SetBranchAddress("Jet_eta", &Jet_eta, &b_Jet_eta);'
echo '  oldtree->SetBranchAddress("Jet_phi", &Jet_phi, &b_Jet_phi);'
echo '  oldtree->SetBranchAddress("Jet_pfCombinedInclusiveSecondaryVertexV2BJetTags", &Jet_pfCombinedInclusiveSecondaryVertexV2BJetTags, &b_Jet_pfCombinedInclusiveSecondaryVertexV2BJetTags);'
echo '  oldtree->SetBranchAddress("Jet_neutralHadEnergyFraction", &Jet_neutralHadEnergyFraction, &b_Jet_neutralHadEnergyFraction);'
echo '  oldtree->SetBranchAddress("Jet_chargedEmEnergyFraction", &Jet_chargedEmEnergyFraction, &b_Jet_chargedEmEnergyFraction);'
echo '  oldtree->SetBranchAddress("Jet_neutralEmEnergyFraction", &Jet_neutralEmEnergyFraction, &b_Jet_neutralEmEnergyFraction);'
echo '  oldtree->SetBranchAddress("Jet_numberOfConstituents", &Jet_numberOfConstituents, &b_Jet_numberOfConstituents);'
echo '  oldtree->SetBranchAddress("Jet_chargedHadronEnergyFraction", &Jet_chargedHadronEnergyFraction, &b_Jet_chargedHadronEnergyFraction);'
echo '  oldtree->SetBranchAddress("Jet_chargedMultiplicity", &Jet_chargedMultiplicity, &b_Jet_chargedMultiplicity);'
echo '  oldtree->SetBranchAddress("Jet_mass", &Jet_mass, &b_Jet_mass);'
echo '  oldtree->SetBranchAddress("Jet_JesSF",&Jet_JesSF,&b_Jet_JesSF);'
echo '  oldtree->SetBranchAddress("Jet_JerSF",&Jet_JerSF,&b_Jet_JerSF);'
echo ''
echo '  //BOOSTED JETS AND TOP-TAGGING LOAD'
echo '  vector <double> *BoostedJet_pt,*BoostedJet_eta,*BoostedJet_phi,*BoostedJet_mass,*BoostedJet_tau1,*BoostedJet_tau2,*BoostedJet_pruned_mass,*BoostedJet_neutralHadEnergyFraction;'
echo '  vector <double> *BoostedJet_chargedEmEnergyFraction,*BoostedJet_neutralEmEmEnergyFraction,*BoostedJet_numberOfConstituents,*BoostedJet_chargedHadronEnergyFraction,*BoostedJet_JesSF;'
echo '  vector <double> *BoostedJet_chargedMultiplicity,*TopTagging_topMass,*TopTagging_minMass,*TopTagging_nSubJets;'
echo '  TBranch *b_BoostedJet_pt,*b_BoostedJet_eta,*b_BoostedJet_phi,*b_BoostedJet_mass,*b_BoostedJet_tau1,*b_BoostedJet_tau2,*b_BoostedJet_pruned_mass,*b_BoostedJet_neutralHadEnergyFraction;'
echo '  TBranch *b_BoostedJet_chargedEmEnergyFraction,*b_BoostedJet_neutralEmEmEnergyFraction,*b_BoostedJet_numberOfConstituents,*b_BoostedJet_chargedHadronEnergyFraction,*b_BoostedJet_JesSF;'
echo '  TBranch *b_BoostedJet_chargedMultiplicity,*b_TopTagging_topMass,*b_TopTagging_minMass,*b_TopTagging_nSubJets;'
echo '  oldtree->SetBranchAddress("BoostedJet_pt",&BoostedJet_pt,&b_BoostedJet_pt);'
echo '  oldtree->SetBranchAddress("BoostedJet_eta",&BoostedJet_eta,&b_BoostedJet_eta);'
echo '  oldtree->SetBranchAddress("BoostedJet_phi",&BoostedJet_phi,&b_BoostedJet_phi);'
echo '  oldtree->SetBranchAddress("BoostedJet_mass",&BoostedJet_mass,&b_BoostedJet_mass);'
echo '  oldtree->SetBranchAddress("BoostedJet_neutralHadEnergyFraction",&BoostedJet_neutralHadEnergyFraction,&b_BoostedJet_neutralHadEnergyFraction);'
echo '  oldtree->SetBranchAddress("BoostedJet_chargedEmEnergyFraction",&BoostedJet_chargedEmEnergyFraction,&b_BoostedJet_chargedEmEnergyFraction);'
echo '  oldtree->SetBranchAddress("BoostedJet_neutralEmEmEnergyFraction",&BoostedJet_neutralEmEmEnergyFraction,&b_BoostedJet_neutralEmEmEnergyFraction);'
echo '  oldtree->SetBranchAddress("BoostedJet_numberOfConstituents",&BoostedJet_numberOfConstituents,&b_BoostedJet_numberOfConstituents);'
echo '  oldtree->SetBranchAddress("BoostedJet_chargedHadronEnergyFraction",&BoostedJet_chargedHadronEnergyFraction,&b_BoostedJet_chargedHadronEnergyFraction);'
echo '  oldtree->SetBranchAddress("BoostedJet_chargedMultiplicity",&BoostedJet_chargedMultiplicity,&b_BoostedJet_chargedMultiplicity);'
echo '  oldtree->SetBranchAddress("BoostedJet_tau1",&BoostedJet_tau1,&b_BoostedJet_tau1);'
echo '  oldtree->SetBranchAddress("BoostedJet_tau2",&BoostedJet_tau2,&b_BoostedJet_tau2);'
echo '  oldtree->SetBranchAddress("BoostedJet_pruned_mass",&BoostedJet_pruned_mass,&b_BoostedJet_pruned_mass);'
echo '  oldtree->SetBranchAddress("BoostedJet_JesSF",&BoostedJet_JesSF,&b_BoostedJet_JesSF);'
echo '  oldtree->SetBranchAddress("TopTagging_topMass",&TopTagging_topMass,&b_TopTagging_topMass);'
echo '  oldtree->SetBranchAddress("TopTagging_minMass",&TopTagging_minMass,&b_TopTagging_minMass);'
echo '  oldtree->SetBranchAddress("TopTagging_nSubJets",&TopTagging_nSubJets,&b_TopTagging_nSubJets);'
echo ''
echo '  //OTHERS LOAD'
echo '  int triggerSL,triggerDL,*HLT_Ele105_CaloIdVT_GsfTrkIdT,*HLT_Ele27_eta2p1_WP75_Gsf,*HLT_Ele27_eta2p1_WPLoose_Gsf,*HLT_Mu50,*HLT_IsoMu20,*nBestVtx,*ttHFCategory;'
echo '  double *PUWeight;'
echo '  TBranch *b_triggerSL,*b_triggerDL,*b_HLT_Ele105_CaloIdVT_GsfTrkIdT,*b_HLT_Ele27_eta2p1_WP75_Gsf,*b_HLT_Ele27_eta2p1_WPLoose_Gsf,*b_HLT_Mu50,*b_HLT_IsoMu20,*b_nBestVtx,*b_PUWeight,*b_ttHFCategory;'
echo '  oldtree->SetBranchAddress("triggerSL",&triggerSL,&b_triggerSL);'
echo '  oldtree->SetBranchAddress("triggerDL",&triggerDL,&b_triggerDL);'
echo '  oldtree->SetBranchAddress("HLT_Ele105_CaloIdVT_GsfTrkIdT",&HLT_Ele105_CaloIdVT_GsfTrkIdT,&b_HLT_Ele105_CaloIdVT_GsfTrkIdT);'
echo '  oldtree->SetBranchAddress("HLT_Ele27_eta2p1_WP75_Gsf",&HLT_Ele27_eta2p1_WP75_Gsf,&b_HLT_Ele27_eta2p1_WP75_Gsf);'
echo '  oldtree->SetBranchAddress("HLT_Ele27_eta2p1_WPLoose_Gsf",&HLT_Ele27_eta2p1_WPLoose_Gsf,&b_HLT_Ele27_eta2p1_WPLoose_Gsf);'
echo '  oldtree->SetBranchAddress("HLT_Mu50",&HLT_Mu50,&b_HLT_Mu50);'
echo '  oldtree->SetBranchAddress("HLT_IsoMu20",&HLT_IsoMu20,&b_HLT_IsoMu20);'
echo '  oldtree->SetBranchAddress("nBestVtx",&nBestVtx,&b_nBestVtx);'
echo '  oldtree->SetBranchAddress("PUWeight",&PUWeight,&b_PUWeight);'
echo '  oldtree->SetBranchAddress("ttHFCategory",&ttHFCategory,&b_ttHFCategory);'
if [ "$sampleType" == "MC" ]; then
    echo ''
    echo '  //GEN LOAD'
    echo '  vector<double> *Gen_pt,*Gen_eta,*Gen_phi,*Gen_status,*Gen_pdg_id,*Gen_motherpdg_id;'
    echo '  TBranch *b_Gen_pt,*b_Gen_eta,*b_Gen_phi,*b_Gen_status,*b_Gen_pdg_id,*b_Gen_motherpdg_id;'
    echo '  oldtree->SetBranchAddress("Gen_pt", &Gen_pt, &b_Gen_pt);'
    echo '  oldtree->SetBranchAddress("Gen_eta", &Gen_eta, &b_Gen_eta);'
    echo '  oldtree->SetBranchAddress("Gen_phi", &Gen_phi, &b_Gen_phi);'
    echo '  oldtree->SetBranchAddress("Gen_status", &Gen_status, &b_Gen_status);'
    echo '  oldtree->SetBranchAddress("Gen_pdg_id", &Gen_pdg_id, &b_Gen_pdg_id);'
    echo '  oldtree->SetBranchAddress("Gen_motherpdg_id", &Gen_motherpdg_id, &b_Gen_motherpdg_id);'
fi
echo ''
echo '  //NEW VARIABLES DEFINITION'
echo '  //int NumberOfJets_ = 0;'
echo '  //TBranch *NumberOfJets = newtree->Branch("NumberOfJets",&NumberOfJets_,"NumberOfJets/I");'
echo ''
echo '  Int_t nentries = (Int_t)oldtree->GetEntries();'
echo '  for (Int_t i=0;i<nentries; i++) {'
echo '    Long64_t tentry = oldtree->LoadTree(i);'
echo '    b_Muon_pt->GetEntry(tentry);'
echo '    b_Muon_eta->GetEntry(tentry);'
echo '    b_Muon_phi->GetEntry(tentry);'
echo '    b_Muon_energy->GetEntry(tentry);'
echo '    b_Muon_relIsoDeltaBetaR04->GetEntry(tentry);'
echo '    b_Muon_tight->GetEntry(tentry);'
echo '    b_Muon_charge->GetEntry(tentry);'
echo '    b_patElectron_pt->GetEntry(tentry);'
echo '    b_patElectron_eta->GetEntry(tentry);'
echo '    b_patElectron_SCeta->GetEntry(tentry);'
echo '    b_patElectron_phi->GetEntry(tentry);'
echo '    b_patElectron_energy->GetEntry(tentry);'
echo '    b_patElectron_relIsoDeltaBeta->GetEntry(tentry);'
echo '    b_patElectron_inCrack->GetEntry(tentry);'
echo '    b_patElectron_isPassLoose->GetEntry(tentry);'
echo '    b_patElectron_isPassMedium->GetEntry(tentry);'
echo '    b_patElectron_passConversionVeto->GetEntry(tentry);'
echo '    b_patElectron_charge->GetEntry(tentry);'
echo '    b_patElectron_isPassVeto->GetEntry(tentry);'
echo '    b_patElectron_isPassTight->GetEntry(tentry);'
echo '    b_patElectron_isPassHEEPId->GetEntry(tentry);'
echo '    b_patElectron_isPassMvatrig->GetEntry(tentry);'
echo '    b_patElectron_full5x5_sigmaIetaIeta->GetEntry(tentry);'
echo '    b_patElectron_hOverE->GetEntry(tentry);'
echo '    b_patElectron_ecalPFClusterIso->GetEntry(tentry);'
echo '    b_patElectron_hcalPFClusterIso->GetEntry(tentry);'
echo '    b_patElectron_isolPtTracks->GetEntry(tentry);'
echo '    b_patElectron_dEtaIn->GetEntry(tentry);'
echo '    b_patElectron_dPhiIn->GetEntry(tentry);'
echo '    b_Jet_pt->GetEntry(tentry);'
echo '    b_Jet_Uncorr_pt->GetEntry(tentry);'
echo '    b_Jet_eta->GetEntry(tentry);'
echo '    b_Jet_phi->GetEntry(tentry);'
echo '    b_Jet_pfCombinedInclusiveSecondaryVertexV2BJetTags->GetEntry(tentry);'
echo '    b_Jet_neutralHadEnergyFraction->GetEntry(tentry);'
echo '    b_Jet_chargedEmEnergyFraction->GetEntry(tentry);'
echo '    b_Jet_neutralEmEnergyFraction->GetEntry(tentry);'
echo '    b_Jet_numberOfConstituents->GetEntry(tentry);'
echo '    b_Jet_chargedHadronEnergyFraction->GetEntry(tentry);'
echo '    b_Jet_chargedMultiplicity->GetEntry(tentry);'
echo '    b_Jet_mass->GetEntry(tentry);'
echo '    b_Jet_JesSF->GetEntry(tentry);'
echo '    b_Jet_JerSF->GetEntry(tentry);'
echo '    b_BoostedJet_pt->GetEntry(tentry);'
echo '    b_BoostedJet_eta->GetEntry(tentry);'
echo '    b_BoostedJet_phi->GetEntry(tentry);'
echo '    b_BoostedJet_mass->GetEntry(tentry);'
echo '    b_BoostedJet_neutralHadEnergyFraction->GetEntry(tentry);'
echo '    b_BoostedJet_chargedEmEnergyFraction->GetEntry(tentry);'
echo '    b_BoostedJet_neutralEmEmEnergyFraction->GetEntry(tentry);'
echo '    b_BoostedJet_numberOfConstituents->GetEntry(tentry);'
echo '    b_BoostedJet_chargedHadronEnergyFraction->GetEntry(tentry);'
echo '    b_BoostedJet_chargedMultiplicity->GetEntry(tentry);'
echo '    b_BoostedJet_tau1->GetEntry(tentry);'
echo '    b_BoostedJet_tau2->GetEntry(tentry);'
echo '    b_BoostedJet_pruned_mass->GetEntry(tentry);'
echo '    b_BoostedJet_JesSF->GetEntry(tentry);'
echo '    b_TopTagging_topMass->GetEntry(tentry);'
echo '    b_TopTagging_minMass->GetEntry(tentry);'
echo '    b_TopTagging_nSubJets->GetEntry(tentry);'
echo '    b_triggerSL->GetEntry(tentry);'
echo '    b_triggerDL->GetEntry(tentry);'
echo '    b_HLT_Ele105_CaloIdVT_GsfTrkIdT->GetEntry(tentry);'
echo '    b_HLT_Ele27_eta2p1_WP75_Gsf->GetEntry(tentry);'
echo '    b_HLT_Ele27_eta2p1_WPLoose_Gsf->GetEntry(tentry);'
echo '    b_HLT_Mu50->GetEntry(tentry);'
echo '    b_HLT_IsoMu20->GetEntry(tentry);'
echo '    b_nBestVtx->GetEntry(tentry);'
echo '    b_PUWeight->GetEntry(tentry);'
echo '    b_ttHFCategory->GetEntry(tentry);'
if [ "$sampleType" == "MC" ]; then
    echo '    b_Gen_pt->GetEntry(tentry);'
    echo '    b_Gen_eta->GetEntry(tentry);'
    echo '    b_Gen_phi->GetEntry(tentry);'
    echo '    b_Gen_status->GetEntry(tentry);'
    echo '    b_Gen_pdg_id->GetEntry(tentry);'
    echo '    b_Gen_motherpdg_id->GetEntry(tentry);'
fi
echo ''
echo '    //LEPTON SELECTION - MUON (tth and Tprime)'
echo '    vector<double> SelMuon_pt,SelMuon_eta,SelMuon_phi,SelMuon_iso;'
echo '    for (UInt_t j = 0; j < Muon_pt->size(); ++j){'
echo '      if(!(Muon_pt->at(j)>10))                     continue;'
echo '      if(!(fabs(Muon_eta->at(j))<2.4))             continue;'
echo '      if(!(Muon_tight->at(j)==1))                  continue;'
echo '      if(!(Muon_relIsoDeltaBetaR04->at(j)<0.20))   continue;'
echo '      SelMuon_pt.push_back(Muon_pt->at(j));'
echo '      SelMuon_eta.push_back(Muon_eta->at(j));'
echo '      SelMuon_phi.push_back(Muon_phi->at(j));'
echo '      SelMuon_iso.push_back(Muon_relIsoDeltaBetaR04->at(j));'
echo '    }'
echo '    //LEPTON SELECTION - ELECTRON (Tprime)'
echo '    vector<double> SelElectron_pt,SelElectron_eta,SelElectron_phi;'
echo '    vector<int>    SelElectron_medium;'
echo '    for (UInt_t j = 0; j < patElectron_pt->size(); ++j){'
echo '      if(!(patElectron_pt->at(j)>10))                 continue;'
echo '      if(!(fabs(patElectron_eta->at(j))<2.4))	    continue;'
echo '      if(!(fabs(patElectron_SCeta->at(j))<2.5))	    continue;'
echo '      if(!(patElectron_inCrack->at(j)==0))	    continue;'
echo '      if(!(patElectron_isPassLoose->at(j)==1))	    continue;'
echo '      if(!(patElectron_passConversionVeto->at(j)==1)) continue;'
echo '      SelElectron_pt.push_back(patElectron_pt->at(j));'
echo '      SelElectron_eta.push_back(patElectron_eta->at(j));'
echo '      SelElectron_phi.push_back(patElectron_phi->at(j));'
echo '      SelElectron_medium.push_back(patElectron_isPassMedium->at(j));'
echo '    }'
echo '    //LEPTON SELECTION - ELECTRON (tth)'
echo '    vector<double> SelElectronMVA_pt,SelElectronMVA_eta,SelElectronMVA_phi;'
echo '    for (UInt_t j = 0; j < patElectron_pt->size(); ++j){'
echo '      if(!(patElectron_pt->at(j)>15))                 continue;'
echo '      if(!(fabs(patElectron_eta->at(j))<2.4))	    continue;'
echo '      if(!(patElectron_inCrack->at(j)==0))	    continue;'
echo '      if(!(patElectron_isPassMvatrig->at(j)==1))	    continue;'
echo '      if(fabs(patElectron_SCeta->at(j))<1.4442){'
echo '        if(!(patElectron_full5x5_sigmaIetaIeta->at(j)<0.012))                   continue;'
echo '        if(!(patElectron_hOverE->at(j)<0.09))                                   continue;'
echo '        if(!((patElectron_ecalPFClusterIso->at(j)/patElectron_pt->at(j))<0.37)) continue;'
echo '        if(!((patElectron_hcalPFClusterIso->at(j)/patElectron_pt->at(j))<0.25)) continue;'
echo '        if(!((patElectron_isolPtTracks->at(j)/patElectron_pt->at(j))<0.18))     continue;'
echo '        if(!(fabs(patElectron_dEtaIn->at(j))<0.0095))                           continue;'
echo '        if(!(fabs(patElectron_dPhiIn->at(j))<0.065))                            continue;'
echo '      }'
echo '      if(fabs(patElectron_SCeta->at(j))>1.5660){'
echo '        if(!(patElectron_full5x5_sigmaIetaIeta->at(j)<0.033))                   continue;'
echo '        if(!(patElectron_hOverE->at(j)<0.09))                                   continue;'
echo '        if(!((patElectron_ecalPFClusterIso->at(j)/patElectron_pt->at(j))<0.45)) continue;'
echo '        if(!((patElectron_hcalPFClusterIso->at(j)/patElectron_pt->at(j))<0.28)) continue;'
echo '        if(!((patElectron_isolPtTracks->at(j)/patElectron_pt->at(j))<0.18))     continue;'
echo '      }'
echo '      SelElectronMVA_pt.push_back(patElectron_pt->at(j));'
echo '      SelElectronMVA_eta.push_back(patElectron_eta->at(j));'
echo '      SelElectronMVA_phi.push_back(patElectron_phi->at(j));'
echo '    }'
echo ''
echo '    //JET SELECTION'
echo '    vector<double> SelJet_pt,SelJet_eta,SelJet_phi,SelJet_pfCombinedInclusiveSecondaryVertexV2BJetTags;'
echo '    for (UInt_t j = 0; j < Jet_pt->size(); ++j){'
echo '      if(!(Jet_pt->at(j)>30)) continue;'
echo '      if(!(fabs(Jet_eta->at(j))<2.4)) continue;'
echo '      if(!(Jet_neutralHadEnergyFraction->at(j)<0.99)) continue;'
echo '      if(!(Jet_chargedEmEnergyFraction->at(j)<0.99)) continue;'
echo '      if(!(Jet_neutralEmEnergyFraction->at(j)<0.99)) continue;'
echo '      if(!(Jet_numberOfConstituents->at(j)>1)) continue;'
echo '      if(!(Jet_chargedHadronEnergyFraction->at(j)>0.0)) continue;'
echo '      if(!(Jet_chargedMultiplicity->at(j)>0.0)) continue;'
echo '      bool deltaRJetLepBoolean = true;'
echo '      for (UInt_t k = 0; k < SelMuon_pt.size(); ++k){'
echo '        float deltaEta = SelMuon_eta[k]-Jet_eta->at(j);'
echo '        float deltaPhi = fabs(SelMuon_phi[k]-Jet_phi->at(j));'
echo '        if(deltaPhi>TMath::Pi()) deltaPhi = 2*TMath::Pi() - deltaPhi;'
echo '        if(sqrt(deltaEta*deltaEta + deltaPhi*deltaPhi)<0.4) deltaRJetLepBoolean=false;'
echo '      }'
echo '      for (UInt_t k = 0; k < SelElectron_pt.size(); ++k){'
echo '        float deltaEta = SelElectron_eta[k]-Jet_eta->at(j);'
echo '        float deltaPhi = fabs(SelElectron_phi[k]-Jet_phi->at(j));'
echo '        if(deltaPhi>TMath::Pi()) deltaPhi = 2*TMath::Pi() - deltaPhi;'
echo '        if(sqrt(deltaEta*deltaEta + deltaPhi*deltaPhi)<0.4) deltaRJetLepBoolean=false;'
echo '      }'
echo '      if(deltaRJetLepBoolean){'
echo '        SelJet_pt.push_back(Jet_pt->at(j));'
echo '        SelJet_eta.push_back(Jet_eta->at(j));'
echo '        SelJet_phi.push_back(Jet_phi->at(j));'
echo '        SelJet_pfCombinedInclusiveSecondaryVertexV2BJetTags.push_back(Jet_pfCombinedInclusiveSecondaryVertexV2BJetTags->at(j));'
echo '      }'
echo '    }'
echo '    int nBCSVM = 0;'
echo '    for(int k = 0; k < SelJet_pt.size(); ++k){'
echo '      if(SelJet_pfCombinedInclusiveSecondaryVertexV2BJetTags[k]>0.89) nBCSVM=nBCSVM+1;'
echo '    }'
echo '    //NumberOfJets_ = SelJet_pt.size();'
echo ''
echo '    //EVENT SELECTION - Tprime SKIMMING'
echo '    newtree->Fill();'
echo '    //if(SelMuon_pt.size()>=2 || SelElectron_pt.size()>=2) newtree->Fill();'
echo '    //EVENT SELECTION - tth SKIMMING'
echo '    //if((triggerSL==1 && ((SelMuon_pt.size()==1 && SelMuon_pt[0]>25) || (SelElectronMVA_pt.size()==1 && SelElectronMVA_pt[0]>30)) && SelJet_pt.size()>=4) || (triggerDL==1 && (SelMuon_pt.size()+SelElectronMVA_pt.size())==2 && SelJet_pt.size()>=2)) newtree->Fill();'
echo '    //if((triggerSL==1 && (SelMuon_pt.size()==1 || SelElectron_pt.size()==1)) || (triggerDL==1 && (SelMuon_pt.size()+SelElectron_pt.size())==2)) newtree->Fill();'
echo '    //if(triggerSL==1&&((SelElectron_pt.size()==1&&SelElectron_pt[0]>30&&fabs(SelElectron_eta[0])<2.1&&SelElectron_medium[0]==1)||(SelMuon_pt.size()==1&&SelMuon_pt[0]>30&&fabs(SelMuon_eta[0])<2.1&&SelMuon_iso[0]<0.12))&&SelJet_pt.size()>=6&&nBCSVM>=3) newtree->Fill();'
echo '  }'
echo '  newtree->Print();'
echo '  newtree->AutoSave();'
echo '  delete oldfile;'
echo '  delete newfile;'
echo '}'